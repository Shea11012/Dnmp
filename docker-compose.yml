version: '3.2'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  workspace:
    container_name: workspace
    build:
      context: ./workspace
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    tty: true
    networks:
      - frontend
      - backend

  #### PHP-FPM ######
  php-fpm:
    container_name: php-fpm
    build:
      context: ./php-fpm
    volumes:
      - ./php-fpm/php7.3.ini:/usr/local/etc/php/php.ini
      - ${PHP_FPM_LOG_PATH}:/var/log/php:rw
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - '9000'
      - '9501'
    depends_on:
      - workspace
    networks:
      - backend

  #### NGINX Server #####
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites
    ports:
      - '${NGINX_HOST_HTTP_PORT}:80'
      - '${NGINX_HOST_HTTPS_PORT}:443'
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  #### MySQL ########
  mysql:
    container_name: mysql
    build:
      context: ./mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - '${MYSQL_PORT}:3306'
    networks:
      - backend

  #### MongoDB ######
  mongo:
    container_name: mongo
    build: ./mongo
    ports:
      - '${MONGODB_PORT}:27017'
    volumes:
      - ${DATA_PATH_HOST}/mongo:/data/db
    networks:
      - backend

  #### Redis ######
  redis:
    container_name: redis
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - backend

  #### Memcached ######
  #   memcached:
  #     container_name: memcached
  #     build: ./memcached
  #     volumes:
  #       - ${DATA_PATH_HOST}/memcached:/var/lib/memcached
  #     ports:
  #       - '${MEMCACHED_HOST_PORT}:11211'
  #     depends_on:
  #       - php-fpm
  #     networks:
  #       - backend

  #### elasticsearch
  # elasticsearch-m:
  #   build: ./elasticsearch
  #   container_name: es-m
  #   volumes:
  #     - ${DATA_PATH_HOST}/elasticsearch/master:/usr/share/elasticsearch/data
  #     - ./elasticsearch/master.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   depends_on:
  #     - php-fpm
  #   networks:
  #     - frontend
  #     - backend

  # elasticsearch-s:
  #   build: ./elasticsearch
  #   container_name: es-s
  #   volumes:
  #     - ${DATA_PATH_HOST}/elasticsearch/slave:/usr/share/elasticsearch/data
  #     - ./elasticsearch/slave.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - "9201:9200"
  #     - "9301:9300"
  #   depends_on:
  #     - php-fpm
  #   networks:
  #     - frontend
  #     - backend

  ## elasticsearch 可视化工具
  # kibana:
  #   container_name: kibana
  #   image: kibana:7.3.0
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - elasticsearch.hosts=http://es-m:9200
  #     - il8n.locale=zh-CN
  #   networks:
  #     - frontend
  #     - backend

  ###### swoole
  swoole:
    container_name: swoole
    build: ./swoole
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    depends_on:
      - workspace
    networks:
      - backend
    tty: true
    entrypoint: ['bash']
  ##### C
#   gdbserver:
#     build: ./C
#     image: clion_dev
#     container_name: c_debug
#     ports:
#       - '7776:22'
#       - '7777:7777'
#     volumes:
#       - ${APP_CODE_PATH_HOST}/c:/home/debugger/clion_dev
#     working_dir: /home/debugger/clion_dev
#     hostname: debug
