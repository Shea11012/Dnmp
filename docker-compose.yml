version: "3.2"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  workspace:
    build:
      context: ./workspace
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    tty: true
    networks:
      - frontend
      - backend

  #### PHP-FPM ######
  php-fpm:
    build:
      context: ./php-fpm
    volumes:
      - ./php-fpm/php7.3.ini:/usr/local/etc/php/php.ini
      - ${PHP_FPM_LOG_PATH}:/var/log/php:rw
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - "9000"
    depends_on:
      - workspace
    networks:
      - backend

  #### NGINX Server #####
  nginx:
    build:
      context: ./nginx
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  #### MySQL ########
  mysql:
    build:
      context: ./mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  #### MongoDB ######
  # mongo:
  #   build: ./mongo
  #   ports:
  #     - "${MONGODB_PORT}:27017"
  #   volumes:
  #     - ${DATA_PATH_HOST}/mongo:/data/db
  #   networks:
  #     - backend

  #### Redis ######
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  #### Memcached ######
  memcached:
    build: ./memcached
    volumes:
      - ${DATA_PATH_HOST}/memcached:/var/lib/memcached
    ports:
      - "${MEMCACHED_HOST_PORT}:11211"
    depends_on:
      - php-fpm
    networks:
      - backend
  #### elasticsearch
  elasticsearch:
    image: shea11012/mxy:elasticsearch
    volumes:
      - ${DATA_PATH_HOST}/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - cluster.name=dnmp-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
  ###### swoole
  swoole:
    build: ./swoole
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    depends_on:
      - workspace
    networks:
      - backend
    tty: true
    entrypoint: ["bash"]
